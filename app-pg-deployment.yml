apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    name: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      name: app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        name: app
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      containers:
      - env:
        - name: RACK_ENV
          value: production
        - name: RAILS_ENV
          value: production
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: app-env-vars
              key: secret-key-base
        - name: POSTGRES_DB_HOST
          value: 127.0.0.1:5432
        # [START cloudsql_secrets]
        - name: POSTGRES_DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: POSTGRES_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        # [END cloudsql_secrets]
        image: gcr.io/project_id/image_name:v1
        name: app
        ports:
        - containerPort: 3000
          name: http-server
        livenessProbe:
          httpGet:
            path: /_health
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /_health
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 1
      # Change <INSTANCE_CONNECTION_NAME> here to include your GCP
      # project, the region of your Cloud SQL instance and the name
      # of your Cloud SQL instance. The format is
      # $PROJECT:$REGION:$INSTANCE
      # [START proxy_container]
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=<INSTANCE_CONNECTION_NAME>=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      # [END volumes]
